# ---------------------------
# Storage Class
# ---------------------------
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: citus-storage
provisioner: k8s.io/minikube-hostpath
volumeBindingMode: Immediate
---
# ---------------------------
# PostgreSQL Secrets
# ---------------------------
apiVersion: v1
kind: Secret
metadata:
  name: citus-secrets
type: Opaque
data:
  POSTGRES_USER: cG9zdGdyZXM= # base64 for 'postgres'
  POSTGRES_PASSWORD: cG9zdGdyZXM= # base64 for 'postgres'
  POSTGRES_DB: cG9zdGdyZXM= # base64 for 'postgres'
---
# ---------------------------
# Coordinator Service
# ---------------------------
apiVersion: v1
kind: Service
metadata:
  name: citus-coordinator
spec:
  type: NodePort # Recommended to change it to LoadBalancer when deploying in cloud
  selector:
    app: citus
    role: coordinator
  ports:
    - port: 5432
      targetPort: 5432
      nodePort: 32345
---
# ---------------------------
# Coordinator StatefulSet
# ---------------------------
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: citus-coordinator
spec:
  serviceName: "citus-coordinator"
  replicas: 1
  selector:
    matchLabels:
      app: citus
      role: coordinator
  template:
    metadata:
      labels:
        app: citus
        role: coordinator
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - citus
                topologyKey: "kubernetes.io/hostname"
      containers:
        - name: coordinator
          image: ghcr.io/erykksc/citus-mobilitydb:latest
          envFrom:
            - secretRef:
                name: citus-secrets
          ports:
            - containerPort: 5432
          volumeMounts:
            - name: data
              mountPath: /var/lib/postgresql/data
          readinessProbe:
            exec:
              command: ["pg_isready", "-U", "postgres"]
            initialDelaySeconds: 5
            periodSeconds: 10

          livenessProbe:
            exec:
              command: ["pg_isready", "-U", "postgres"]
            initialDelaySeconds: 30
            periodSeconds: 30
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: ["ReadWriteOnce"]
        storageClassName: citus-storage
        resources:
          requests:
            storage: 10Gi
          limits:
            storage: 20Gi
---
# ---------------------------
# Worker Headless Service
# ---------------------------
apiVersion: v1
kind: Service
metadata:
  name: citus-worker
spec:
  clusterIP: None
  selector:
    app: citus
    role: worker
  ports:
    - port: 5432
      targetPort: 5432
---
# ---------------------------
# Worker StatefulSet
# ---------------------------
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: citus-worker
spec:
  serviceName: "citus-worker"
  replicas: 10
  selector:
    matchLabels:
      app: citus
      role: worker
  template:
    metadata:
      labels:
        app: citus
        role: worker
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - citus
                topologyKey: "kubernetes.io/hostname"
      containers:
        - name: worker
          image: ghcr.io/erykksc/citus-mobilitydb:latest
          envFrom:
            - secretRef:
                name: citus-secrets
          ports:
            - containerPort: 5432
          volumeMounts:
            - name: data
              mountPath: /var/lib/postgresql/data
          readinessProbe:
            exec:
              command: ["pg_isready", "-U", "postgres"]
            initialDelaySeconds: 5
            periodSeconds: 10

          livenessProbe:
            exec:
              command: ["pg_isready", "-U", "postgres"]
            initialDelaySeconds: 30
            periodSeconds: 30
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: ["ReadWriteOnce"]
        storageClassName: citus-storage
        resources:
          requests:
            storage: 5Gi
          limits:
            storage: 20Gi
---
# ---------------------------
# Manager RBAC
# ---------------------------
apiVersion: v1
kind: ServiceAccount
metadata:
  name: manager-sa
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: manager-role
rules:
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: manager-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: manager-role
subjects:
  - kind: ServiceAccount
    name: manager-sa
---
# ---------------------------
# Manager Deployment
# ---------------------------
apiVersion: apps/v1
kind: Deployment
metadata:
  name: citus-manager
spec:
  replicas: 1
  selector:
    matchLabels:
      app: citus-manager
  template:
    metadata:
      labels:
        app: citus-manager
    spec:
      serviceAccountName: manager-sa
      containers:
        - name: manager
          image: ghcr.io/erykksc/citus-k8s-manager:latest
          env:
            - name: CITUS_HOST
              value: citus-coordinator
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: SYNC_INTERVAL_SECONDS
              value: "20"
            - name: LABEL_SELECTOR
              value: "app=citus,role=worker"
          envFrom:
            - secretRef:
                name: citus-secrets
          volumeMounts:
            - name: healthcheck
              mountPath: /healthcheck
          readinessProbe:
            exec:
              command:
                - cat
                - /healthcheck/manager-ready
            initialDelaySeconds: 5
            periodSeconds: 10
      volumes:
        - name: healthcheck
          emptyDir: {}
